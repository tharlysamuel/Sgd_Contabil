@model Inspinia_MVC5.Models.Documento
@{
    Layout = null;
    string gravado = (string)ViewBag.gravado;
}
<div class="modal-dialog modal-lg">
    <div class="modal-content">



        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
            <h4 class="modal-title"><i class="fa fa-paper-plane"></i> Enviar Documento</h4>
        </div>
        <div class="modal-body">
            <div class="container-fluid">
                @using (Ajax.BeginForm("Edit", "Cliente", new AjaxOptions
                {
                    UpdateTargetId = "modal-form",
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "Post",
                    OnFailure = "alert('erro');",
                    OnSuccess = "",
                    OnComplete = "complete();"

                }, new { id = "form1" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <div class="col-lg-6">
                        <label>Descrição</label>
                        @Html.TextBoxFor(model => model.Descricao, new { @class = "form-control" })
                    </div>
                    <div class="col-lg-6">
                        <label>Tipo de arquivo</label>
                        @Html.DropDownListFor(model => model.TipoArquivo, new List<SelectListItem> {
                                               new SelectListItem{ Text = "Nota Fiscal de Entrada", Value = "NFEntrada"},
                                               new SelectListItem{ Text = "Nota Fiscal de Saída", Value = "NFSaida" },
                                               new SelectListItem{ Text = "Holerite", Value = "Holerite" },
                                               new SelectListItem{ Text = "Contratos", Value = "Contratos" },
                                               new SelectListItem{ Text = "Modelos", Value = "Modelos" },
                                               new SelectListItem{ Text = "Arquivos XML", Value = "ArquivoXml" },
                                               new SelectListItem{ Text = "Remessas ERP", Value = "RemessasERP" },
                                           }, new { @class = "form-control" })
                    </div>
                    <div class="col-lg-6">
                        <label>Data do Documento</label>
                        @Html.TextBoxFor(model => model.DataDocumento, new { @class = "form-control", type = "date" })
                    </div>
                    <br />
                    <div class="col-lg-12" style="margin-top:10px">
                        <form action="#" class="dropzone" id="dropzoneForm">
                            <div class="fallback">
                                <input name="file" type="file" multiple />
                            </div>
                        </form>
                    </div>
                }
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="$('form1').trigger('submit')"> <i class="fa fa-paper-plane"></i> Enviar </button>
            <button type="button" class="btn btn-white" data-dismiss="modal">Sair</button>
        </div>

    </div>
</div>

<script type="text/javascript">

    function complete() {

        if ('@gravado' == 'true') {
            $('#btnFechar').trigger('click');
    }

</script>

